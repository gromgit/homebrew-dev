#!/usr/bin/env bash
#:`brew reconcile` [options] [<formula> ...]
#:    Reconcile forked core formulae against main core (default: all forked formulae)
#:    `-f | --force` : Overwrite forked core on any differences

# shellcheck source=../lib/funcs.sh
. "$(dirname "$0")/../lib/funcs.sh"
need_progs brew git lsof timelimit rsync realpath
script_dir=$(dirname "$(realpath -e "$0")")

while true; do
  case "$1" in
    -f|--force) force_copy=1;;
    *) break;;
  esac
  shift
done

# prompt_for_update <formula>
prompt_for_update() {
  local rtn=0
  while true; do
    read -rp "${Tty_cyan}${1}${Tty_reset}: (u)pdate, make (p)atch, (s)kip ? " </dev/tty
    case "${REPLY,,}" in
      s*) rtn=1; break;;
      p*) "${script_dir}/brew-patches" "$1"; rtn=1; break;;
      u*) break;;
    esac
  done
  return "$rtn"
}

updated=0
core=$(brew --repo homebrew/core)
cd "$core" || fatal "Unable to cd to $core"
[[ -d .real/ ]] || fatal "No .real link to original core"
# Fill in new formulae
for i in .real/Formula/*.rb; do
  [[ -s ${i#.real/} ]] || cp -av "$i" "${i#.real/}"
done
# Reconcile Aliases
rsync -avm --delete .real/Aliases/ Aliases/
[[ $# -eq 0 ]] && set -- Formula/*.rb
for i in "$@"; do
  [[ $i == Formula/*.rb ]] || i=Formula/${i}.rb
  if [[ ! -s $i ]]; then
    warn "Can't find $i, skipping"
    continue
  fi
  if [[ ! -s .real/$i ]]; then
    warn "$i no longer exists, archiving"
    mkdir -p .archive && mv -v "$i" .archive/
    continue
  fi
  f=$(basename "$i" .rb)
  if dif=$(diff -uB <(sed '/^  bottle do/,/^  end/d' .real/"$i") <(sed '/^  bottle do/,/^  end/d' "$i")); then
    continue
  else
    echo "===== $i ====="
    echo "$dif"
    if [[ -n $force_copy ]] || prompt_for_update "$f" ; then
      remove_bottle_filter < .real/"$i" > "$i" && ((updated++))
    fi
  fi
done
info "$updated formulae updated"
brew update-core-meta
