#!/usr/bin/env bash
#:`brew fix-timestamps` [options]
#:    Forces local file timestamps to match commit timestamps
#:    `-C *repo*` : Fix timestamps in *repo* (default: Homebrew core)
#:    `-f *file*` : Record last timestamp updated in *file*

. "$(dirname "$0")/../lib/funcs.sh"

need_progs git

shopt -s extglob lastpipe
declare -A f
reftime=0
lasttime=0
repo=$(brew --repo homebrew/core)

while true; do
  case "$1" in
    -C) repo=$2; shift;;
    -f) reffile=$2; shift; [[ -s $reffile ]] && reftime=$(<"${reffile}");;
    *) break;;
  esac
  shift
done

cd "${repo}" || fatal "Unable to cd to '$repo'"
[[ -d Formula ]] || fatal "$(pwd) is not a valid Homebrew repo"

git log --date=format:%Y%m%d%H%M.%S --format="%H %ad" --name-status | while read -r a b; do
  if [[ $a == ??????????* ]]; then
    # It's a hash, the other arg is the date
    [[ $b > $lasttime ]] && lasttime=$b
    [[ $b > $reftime ]] || break
    d=$b
  elif [[ -n $b ]]; then
    if [[ -z "${f[$b]}" && -e "$b" ]]; then
      # We haven't seen this file before
      f+=(["$b"]="$d")
      cmd touch -h -t "$d" "$b"
    fi
  fi
done

if [[ -n $reffile ]]; then
  echo "$lasttime" > "$reffile"
else
  info "Last timestamp: $lasttime"
fi
